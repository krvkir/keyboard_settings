default partial alphanumeric_keys modifier_keys
xkb_symbols "pc105" {

    key <ESC>  {	[ Escape		]	};

    // The extra key on many European keyboards:
    key <LSGT> {	[ less, greater, bar, brokenbar ] };

    // The following keys are common to all layouts.
    key <BKSL> {	[ backslash,	bar	]	};
    key <SPCE> { overlay1=<I229>,	[    space		]	};

    include "srvr_ctrl(fkey2vt)"
    include "pc(editing)"
    include "keypad(x11)"

    key <BKSP> {	[ BackSpace, BackSpace	]	};

    key  <TAB> {	[ Tab,	ISO_Left_Tab	]	};
    key <RTRN> {	[ Return		]	};

    key <CAPS> {	[ Caps_Lock		]	};
    key <NMLK> {	[ Num_Lock    ]	};

    key <LFSH> {	[ Shift_L		]	};
    key <LCTL> {	[ Control_L		]	};
    key <LWIN> {	[ Super_L		]	};
    // key <LWIN> {	[ Menu		]	};

    key <RTSH> {	[ Shift_R		]	};
    key <RCTL> {	[ Control_R		]	};
    key <RWIN> {	[ Super_R		]	};
    // key <MENU> {	[ Menu			]	};
    key <MENU> {	[ Super_R			]	};
    key <COMP> {	[ Super_R			]	};
    key <PRSC> {	[ Super_R			]	};

    // Virtual keys
    key <CLFT> { actions=[ RedirectKey(key=<LEFT>, modifiers=Control, clearmods=Super) ] };
    key <CRGT> { actions=[ RedirectKey(key=<RGHT>, modifiers=Control, clearmods=Super) ] };
    key <CBKS> { actions=[ RedirectKey(key=<BKSP>, modifiers=Control, clearmods=Super) ] };
    key <CDEL> { actions=[ RedirectKey(key=<DELE>, modifiers=Control, clearmods=Super) ] };

    // Beginning of modifier mappings.
    modifier_map Shift  { Shift_L, Shift_R };
    modifier_map Lock   { Caps_Lock };
    modifier_map Control{ Control_L, Control_R };
    modifier_map Mod2   { Num_Lock };
    modifier_map Mod4   { Super_L, Super_R };

    // Fake keys for virtual<->real modifiers mapping:
    // key <LVL3> {	[ ISO_Level3_Shift	]	};
    // key <MDSW> {	[ Mode_switch     ]	};
    // modifier_map Mod5   { <LVL3>, <MDSW> };

    // key <ALT>  {	[ NoSymbol, Alt_L	]	};
    // include "altwin(just_alt)"
    key <LALT> { [ Alt_L, Meta_L ] };
    key <RALT> { [ Alt_R, Meta_R ] };
    modifier_map Mod1 { Alt_L, Alt_R, Meta_L, Meta_R };

    key <META> {	[ NoSymbol, Meta_L	]	};
    modifier_map Mod1   { <META> };

    key <SUPR> {	[ NoSymbol, Super_L	]	};
    modifier_map Mod4   { <SUPR> };

    key <HYPR> {	[ NoSymbol, Hyper_L	]	};
    modifier_map Mod4   { <HYPR> };
    // End of modifier mappings.

    key <OUTP> { [ XF86Display ] };
    key <KITG> { [ XF86KbdLightOnOff ] };
    key <KIDN> { [ XF86KbdBrightnessDown ] };
    key <KIUP> { [ XF86KbdBrightnessUp ] };
};

hidden partial alphanumeric_keys
xkb_symbols "editing" {
    key <PRSC> {
        type= "PC_ALT_LEVEL2",
        symbols[Group1]= [ Print, Sys_Req ]
    };
    key <SCLK> {	[  Scroll_Lock		]	};
    key <PAUS> {
        type= "PC_CONTROL_LEVEL2",
        symbols[Group1]= [ Pause, Break ]
    };
    key  <INS> {	[  Insert		]	};
    key <HOME> {	[  Home			]	};
    key <PGUP> {	[  Prior		]	};
    key <DELE> {	[  Delete		]	};
    key  <END> {	[  End			]	};
    key <PGDN> {	[  Next			]	};

    key   <UP> {	[  Up			]	};
    key <LEFT> {	[  Left			]	};
    key <DOWN> {	[  Down			]	};
    key <RGHT> {	[  Right		]	};
};

///////////////////////////////////////////////////////////////////////////////
// Overlays

// Meta is mapped to second level of Alt keys + LALT on overlay1 is LCTL
partial modifier_keys
xkb_symbols "meta_alt" {
    key <LCTL> { overlay1=<LALT>,
                 [ Control_L, Control_L ] };
    key <LALT> { overlay1=<LCTL>,
                 [ Alt_L, Meta_L ] };
    key <RALT> { type[Group1] = "TWO_LEVEL",
                 symbols[Group1] = [ Alt_R, Meta_R ] };
    modifier_map Mod1 { Alt_L, Alt_R, Meta_L, Meta_R };
    //  modifier_map Mod4 {};
};

// Meta is mapped to second level of Alt keys + enables overlay 1
partial modifier_keys
xkb_symbols "meta_alt_with_overlay" {
    key <LALT> { [ Alt_L, Meta_L ] };
    key <RALT> { type[Group1] = "TWO_LEVEL",
                 symbols[Group1] = [ Alt_R, Meta_R ],
                 actions[Group1] = [ SetControls(controls=overlay1) ] };
    modifier_map Mod1 { Alt_L, Alt_R, Meta_L, Meta_R };
    //  modifier_map Mod4 {};
};

///////////////////////////////////////////////////////////////////////////////
// CapsLock overlay1
partial modifier_keys
xkb_symbols "capslock_overlay1" {
    replace key <CAPS> {
        [ NoSymbol ],
        actions = [ SetControls(controls=overlay1) ]
    };
    modifier_map Mod5 { <CAPS> };
};

partial modifier_keys
xkb_symbols "capslock_level3shift" {
    key <CAPS> {
        type[Group1]="ONE_LEVEL"
        , symbols[Group1] = [ ISO_Level3_Shift ]
    };
    include "level3(modifier_mapping)"
};
///////////////////////////////////////////////////////////////////////////////
// FnKeys
partial alphanumeric_keys
xkb_symbols "fnkeys" {
    replace key <FK12> { [NoSymbol] };
    key <FK13> { [XF86Launch1] };
    key <FK14> { [XF86Launch2] };
    key <FK15> { [XF86Launch3] };
    key <FK16> { [XF86Launch4] };
    key <FK17> { [XF86Launch5] };
    key <FK18> { [XF86Launch6] };
    key <FK19> { [XF86Launch7] };
    key <FK20> { [XF86Launch8] };
    key <FK21> { [XF86Launch9] };
    key <FK22> { [XF86LaunchA] };
    key <FK23> { [XF86LaunchB] };
    key <FK24> { [XF86LaunchC] };
    // key <I227> { [Pointer_Button2] };
    // key <I228> { [Pointer_Button3] };
    // key <I229> { [Pointer_Button1] };
    key <I227> { [XF86LaunchD] };
    key <I228> { [XF86LaunchE] };
    key <I229> { [XF86LaunchF] };
};
